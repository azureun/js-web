# 04-01 조건에 따라 흐름 조절하기 - if, if else문과 조건 연산자
<truthy 값과 falsy 값>
- 논리형 자료 값은 true, false 뿐이다.

1. true로 인정할 수 있는 값
2. false로 인정할 수 있는 값

<js에서 falsy하게 인정하는 값>
1. 0  : 숫자 0
2. "" : 빈 문자열
3. NaN : 숫자가 아님 Not a Number
4. undefined : 정의되지 않음
5. null : 유효하지 않은 값

# 04-02 조건이 많을 때 흐름 조절하기 - switch문

# 04-03 명령문 반복 실행하기 - for문
<for...of문>
ex. 3개의 값이 있는 배열을 순회한다면 값이 끝날 때까지 반복한다.
<for...of문 예시>
let seasons=["봄", "여름", "가을", "겨울];
for(let value of seasons) {
    console.log(value);
}

# 04-04 for문 반복하기 - 중첩 for문

# 04-05 특정 조건에 따라 반복하기 - while문, do-while문

# 04-06 반복을 건너뛰거나 멈추기 - break문, continue문


# 연습 문제
01. 조건을 확인해서 조건에 맞을 때와 맞지 않을 때 서로 다른 명령을 실행해야 한다면 if문과 else문을 사용합니다.
02. 조건 연산자는 물음표와 콜론 기호로 이루어져 있습니다.
03. 논리형 자료 값 true와 fasle 외에 일반적인 값 중에서도 true나 false로 인정할 수 있는 값이 있습니다.
04. 확인해야 할 조건 값이 많은 경우 switch문을 사용하는데, 이때 값을 지정하기 위해 case문을 함께 사용합니다.
05. 여러 명령을 반복해서 실행해야 할 경우 for 같은 반복문을 사용하면 편리합니다.
06. 반복문에서 반복횟수의 기준이 되는 병수를 카운터 변수라고 부릅니다.
07. 2개의 for문을 중첩하면 안쪽 for문이 먼저 실행됩니다.
08. while문은 괄호 안의 조건이 만족해야 중괄호 안의 명령을 실행합니다.
반면에 do-while문은 최소한 한 번은 중괄호 안의 명령을 실행한 후 조건을 확인합니다.
09. 반복문의 특정 지점에서 반복을 중단하려면 break문을 사용합니다.
10. 반복 문장을 건너뛰고 반복문의 맨 앞으로 돌아가려면 continue문을 사용합니다.

Q1. 사용자가 입력한 숫자를 받아 짝수인지 홀수인지 구분하는 프로그램을 작성하세요.
Q2. 1~100까지 숫자 중 3의 배수를 모두 표시하고 몇 개인지 개수도 함께 알려주는 프로그램을 작성하세요.
